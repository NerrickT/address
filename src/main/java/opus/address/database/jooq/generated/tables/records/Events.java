/**
 * This class is generated by jOOQ
 */
package opus.address.database.jooq.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.1"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Events extends org.jooq.impl.UpdatableRecordImpl<opus.address.database.jooq.generated.tables.records.Events> implements org.jooq.Record6<java.lang.Long, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Long, java.sql.Timestamp> {

	private static final long serialVersionUID = 796084905;

	/**
	 * Setter for <code>events.sequence</code>.
	 */
	public void sequence(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>events.sequence</code>.
	 */
	public java.lang.Long sequence() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>events.event</code>.
	 */
	public void event(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>events.event</code>.
	 */
	public java.lang.String event() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>events.event_version</code>.
	 */
	public void eventVersion(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>events.event_version</code>.
	 */
	public java.lang.Integer eventVersion() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>events.code_version</code>.
	 */
	public void codeVersion(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>events.code_version</code>.
	 */
	public java.lang.String codeVersion() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>events.actor</code>.
	 */
	public void actor(java.lang.Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>events.actor</code>.
	 */
	public java.lang.Long actor() {
		return (java.lang.Long) getValue(4);
	}

	/**
	 * Setter for <code>events.when</code>.
	 */
	public void when(java.sql.Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>events.when</code>.
	 */
	public java.sql.Timestamp when() {
		return (java.sql.Timestamp) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Long, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Long, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Long, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Long, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return opus.address.database.jooq.generated.tables.Events.Events.Sequence;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return opus.address.database.jooq.generated.tables.Events.Events.Event;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return opus.address.database.jooq.generated.tables.Events.Events.EventVersion;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return opus.address.database.jooq.generated.tables.Events.Events.CodeVersion;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field5() {
		return opus.address.database.jooq.generated.tables.Events.Events.Actor;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field6() {
		return opus.address.database.jooq.generated.tables.Events.Events.When;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return sequence();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return event();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return eventVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return codeVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value5() {
		return actor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value6() {
		return when();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Events value1(java.lang.Long value) {
		sequence(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Events value2(java.lang.String value) {
		event(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Events value3(java.lang.Integer value) {
		eventVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Events value4(java.lang.String value) {
		codeVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Events value5(java.lang.Long value) {
		actor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Events value6(java.sql.Timestamp value) {
		when(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Events values(java.lang.Long value1, java.lang.String value2, java.lang.Integer value3, java.lang.String value4, java.lang.Long value5, java.sql.Timestamp value6) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached Events
	 */
	public Events() {
		super(opus.address.database.jooq.generated.tables.Events.Events);
	}

	/**
	 * Create a detached, initialised Events
	 */
	public Events(java.lang.Long sequence, java.lang.String event, java.lang.Integer eventVersion, java.lang.String codeVersion, java.lang.Long actor, java.sql.Timestamp when) {
		super(opus.address.database.jooq.generated.tables.Events.Events);

		setValue(0, sequence);
		setValue(1, event);
		setValue(2, eventVersion);
		setValue(3, codeVersion);
		setValue(4, actor);
		setValue(5, when);
	}
}
