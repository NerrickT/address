/**
 * This class is generated by jOOQ
 */
package opus.address.database.jooq.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.1"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Databasechangelog extends org.jooq.impl.TableRecordImpl<opus.address.database.jooq.generated.tables.records.Databasechangelog> implements org.jooq.Record11<java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> {

	private static final long serialVersionUID = -1726919970;

	/**
	 * Setter for <code>databasechangelog.id</code>.
	 */
	public void id(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>databasechangelog.id</code>.
	 */
	public java.lang.String id() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>databasechangelog.author</code>.
	 */
	public void author(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>databasechangelog.author</code>.
	 */
	public java.lang.String author() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>databasechangelog.filename</code>.
	 */
	public void filename(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>databasechangelog.filename</code>.
	 */
	public java.lang.String filename() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>databasechangelog.dateexecuted</code>.
	 */
	public void dateexecuted(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>databasechangelog.dateexecuted</code>.
	 */
	public java.sql.Timestamp dateexecuted() {
		return (java.sql.Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>databasechangelog.orderexecuted</code>.
	 */
	public void orderexecuted(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>databasechangelog.orderexecuted</code>.
	 */
	public java.lang.Integer orderexecuted() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>databasechangelog.exectype</code>.
	 */
	public void exectype(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>databasechangelog.exectype</code>.
	 */
	public java.lang.String exectype() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>databasechangelog.md5sum</code>.
	 */
	public void md5sum(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>databasechangelog.md5sum</code>.
	 */
	public java.lang.String md5sum() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>databasechangelog.description</code>.
	 */
	public void description(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>databasechangelog.description</code>.
	 */
	public java.lang.String description() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>databasechangelog.comments</code>.
	 */
	public void comments(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>databasechangelog.comments</code>.
	 */
	public java.lang.String comments() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>databasechangelog.tag</code>.
	 */
	public void tag(java.lang.String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>databasechangelog.tag</code>.
	 */
	public java.lang.String tag() {
		return (java.lang.String) getValue(9);
	}

	/**
	 * Setter for <code>databasechangelog.liquibase</code>.
	 */
	public void liquibase(java.lang.String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>databasechangelog.liquibase</code>.
	 */
	public java.lang.String liquibase() {
		return (java.lang.String) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Id;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Author;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Filename;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Dateexecuted;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Orderexecuted;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Exectype;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Md5sum;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Description;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Comments;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field10() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Tag;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field11() {
		return opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog.Liquibase;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return id();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return author();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return filename();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return dateexecuted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return orderexecuted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return exectype();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return md5sum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return description();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return comments();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value10() {
		return tag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value11() {
		return liquibase();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value1(java.lang.String value) {
		id(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value2(java.lang.String value) {
		author(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value3(java.lang.String value) {
		filename(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value4(java.sql.Timestamp value) {
		dateexecuted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value5(java.lang.Integer value) {
		orderexecuted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value6(java.lang.String value) {
		exectype(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value7(java.lang.String value) {
		md5sum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value8(java.lang.String value) {
		description(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value9(java.lang.String value) {
		comments(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value10(java.lang.String value) {
		tag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog value11(java.lang.String value) {
		liquibase(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Databasechangelog values(java.lang.String value1, java.lang.String value2, java.lang.String value3, java.sql.Timestamp value4, java.lang.Integer value5, java.lang.String value6, java.lang.String value7, java.lang.String value8, java.lang.String value9, java.lang.String value10, java.lang.String value11) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached Databasechangelog
	 */
	public Databasechangelog() {
		super(opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog);
	}

	/**
	 * Create a detached, initialised Databasechangelog
	 */
	public Databasechangelog(java.lang.String id, java.lang.String author, java.lang.String filename, java.sql.Timestamp dateexecuted, java.lang.Integer orderexecuted, java.lang.String exectype, java.lang.String md5sum, java.lang.String description, java.lang.String comments, java.lang.String tag, java.lang.String liquibase) {
		super(opus.address.database.jooq.generated.tables.Databasechangelog.Databasechangelog);

		setValue(0, id);
		setValue(1, author);
		setValue(2, filename);
		setValue(3, dateexecuted);
		setValue(4, orderexecuted);
		setValue(5, exectype);
		setValue(6, md5sum);
		setValue(7, description);
		setValue(8, comments);
		setValue(9, tag);
		setValue(10, liquibase);
	}
}
